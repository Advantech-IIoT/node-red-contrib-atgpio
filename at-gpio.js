const gpio=require("node-atgpio");module.exports=(t=>{function e(t){let e=1e3;switch(t.rateUnit){case"ms":e=t.rate;break;case"s":e=1e3*t.rate;break;case"m":e=6e4*t.rate;break;case"h":e=36e5*t.rate}return e}function i(){const t={count:s,gpios:[]};if(s>0)for(let e=0;e<s;e+=1){const i={};i.pin=e,i.mode=gpio.getmode(e)?"Input":"Output",i.value=gpio.read(e),t.gpios.push(i)}return t}const s=gpio.count(),o={},n={out:t._("at-gpio.types.output"),in:t._("at-gpio.types.input")};t.nodes.registerType("atgpio info",function(s){t.nodes.createNode(this,s),this.rate=s.rate,this.rateUnit=s.rateUnit;const o=this;let n=null;o.status({fill:"blue",shape:"dot",text:"Initiating....."}),o.status({fill:"blue",shape:"dot",text:"Polling....."}),o.send({payload:i()}),o.status({fill:"green",shape:"dot",text:"common.status.ok"}),null!=n&&(clearInterval(n),n=null),n||(n=setInterval(()=>{o.status({fill:"blue",shape:"dot",text:"Polling....."}),o.send({payload:i()}),o.status({fill:"green",shape:"dot",text:"common.status.ok"})},e(o))),o.on("input",()=>{o.status({fill:"blue",shape:"dot",text:"Polling....."}),o.send({payload:i()}),o.status({fill:"green",shape:"dot",text:"common.status.ok"})}),o.on("close",()=>{o.status({fill:"grey",shape:"ring",text:"at-gpio.status.closed"}),n&&clearInterval(n),n=null})}),t.nodes.registerType("atgpio in",function(i){t.nodes.createNode(this,i),this.pin=Number(i.pin||-1),this.dir=i.dir,this.rate=i.rate,this.rateUnit=i.rateUnit;const s=this;let a=null;if(s.status({fill:"blue",shape:"dot",text:"Initiating....."}),!(void 0!==s.pin&&s.pin>=0))return s.warn(`${t._("at-gpio.errors.invalidpin")}: ${s.pin}`),void s.status({fill:"red",shape:"dot",text:`${t._("at-gpio.errors.invalidpin")}: ${s.pin}`});if(Object.prototype.hasOwnProperty.call(o,s.pin)){if(o[this.pin]!==this.type){const e=t._("at-gpio.errors.alreadyset",{pin:this.pin,type:n[o[this.pin]]});return s.warn(e),void s.status({fill:"red",shape:"dot",text:e})}}else o[this.pin]=this.dir;gpio.setup(s.pin,gpio.INPUT),s.status({fill:"green",shape:"dot",text:"common.status.ok"}),null!=a&&(clearInterval(a),a=null),a||(a=setInterval(()=>{const t=gpio.read(s.pin);s.send({topic:`at-gpio/${s.pin}`,payload:Number(t)})},e(s))),s.on("close",()=>{s.status({fill:"grey",shape:"ring",text:"at-gpio.status.closed"}),delete o[s.pin],a&&clearInterval(a),a=null})}),t.nodes.registerType("atgpio out",function(e){t.nodes.createNode(this,e),this.pin=Number(e.pin||-1),this.dir=e.dir,this.set=e.set||!1,this.level=Number(e.level||0);const i=this;if(!(void 0!==i.pin&&i.pin>=0))return i.warn(`${t._("at-gpio.errors.invalidpin")}: ${i.pin}`),void i.status({fill:"red",shape:"dot",text:`${t._("at-gpio.errors.invalidpin")}: ${i.pin}`});if(Object.prototype.hasOwnProperty.call(o,i.pin)){if(o[this.pin]!==this.dir){const e=t._("at-gpio.errors.alreadyset",{pin:this.pin,type:n[o[this.pin]]});return i.warn(e),void i.status({fill:"red",shape:"dot",text:e})}}else o[this.pin]=this.dir;i.set?(gpio.setup(i.pin,gpio.OUTPUT,i.level),i.status({fill:"green",shape:"dot",text:String(i.level)})):(gpio.setup(i.pin,gpio.OUTPUT),i.status({fill:"green",shape:"dot",text:"common.status.ok"})),i.on("input",e=>{if(!e||!Object.prototype.hasOwnProperty.call(e,"payload"))return;if(null==e.payload)return i.status({fill:"red",shape:"dot",text:"payload error"}),void i.error("GPIOOutNode: Invalid msg.payload!");if(void 0===i.pin||i.pin<0)return;"true"===e.payload&&(e.payload=!0),"false"===e.payload&&(e.payload=!1);const s=Number(e.payload);if(s!==gpio.LOW&&s!==gpio.HIGH)return i.warn(`${t._("at-gpio.errors.invalidinput")}: ${s}`),void i.status({fill:"red",shape:"dot",text:`${t._("at-gpio.errors.invalidinput")}: ${s}`});t.settings.verbose&&i.log(`out: ${e.payload}`),gpio.write(i.pin,s),i.status({fill:"green",shape:"dot",text:s})}),i.on("close",()=>{i.status({fill:"grey",shape:"ring",text:"at-gpio.status.closed"}),void 0!==i.pin&&i.pin>=0&&delete o[i.pin]})}),t.httpAdmin.get("/at-gpio/count/:id",t.auth.needsPermission("at-gpio.read"),(t,e)=>{e.json(s)}),t.httpAdmin.get("/at-gpio/pins/:id",t.auth.needsPermission("at-gpio.read"),(t,e)=>{e.json(o)})});
